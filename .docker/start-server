#!/bin/bash

if [ -f ".env.default" ]; then
  export $(cat .env.default | sed 's/#.*//g' | xargs)
fi

if [ -f ".env" ]; then
  # Read the .env file and export variables line by line
  while IFS= read -r line; do
    # Ignore comments and empty lines
    if [[ ! $line =~ ^# && ! -z $line ]]; then
      export "$line"
    fi
  done < .env
fi

# Print the value of NEKO_VIDEO and NEKO_AUDIO to check how they look after being parsed
echo "Parsed NEKO_VIDEO: $NEKO_VIDEO"
echo "Parsed NEKO_AUDIO: $NEKO_AUDIO"

BINARY_PATH="${PWD}/../server/bin/neko"

# use -r to rebuild
if [ ! -f "${BINARY_PATH}" ] || [ "$1" == "-r" ]; then
  ./rebuild-server
fi

# if image starts with nvidia- add --gpus all
if [[ "${SERVER_TAG}" == "nvidia-"* ]]; then
  GPU_FLAG="--gpus all"
  echo "Nvidia GPU acceleration enabled"
fi

# if image starts with intel- add --device /dev/dri
if [[ "${SERVER_TAG}" == "intel-"* ]]; then
  GPU_FLAG="--device /dev/dri"
  echo "Intel GPU acceleration enabled"
fi

# Build the Docker command
DOCKER_CMD="docker run --rm -d \
  --name 'neko_dev' \
  $GPU_FLAG \
  -p '${SERVER_PORT}:8080' \
  -p '${SERVER_EPR}:${SERVER_EPR}/udp' \
  -e 'NEKO_SCREEN=1920x1080@30' \
  -e 'NEKO_EPR=${SERVER_EPR}' \
  -e 'NEKO_NAT1TO1=${SERVER_IP}' \
  -e 'NEKO_ICELITE=true' \
  -e 'NEKO_MAX_FPS=25' \
  -e 'NEKO_FILE_TRANSFER_ENABLED=true' \
  -e 'NEKO_PASSWORD=osama' \
  -e 'NEKO_PASSWORD_ADMIN=admin' \
  -e 'NEKO_IMPLICIT_CONTROL=true' \
  -e 'NEKO_VIDEO=${NEKO_VIDEO}' \
  -e 'NEKO_AUDIO=${NEKO_AUDIO}' \
  --shm-size=2G \
  --cap-add SYS_ADMIN \
  ${BUILD_IMAGE}:${SERVER_TAG}"

# Print the Docker command for debugging
echo "Docker command: $DOCKER_CMD"

# Execute the Docker command
eval $DOCKER_CMD
